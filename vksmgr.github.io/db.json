{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/cutie/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/lg-fb-comment-box.css","path":"css/lg-fb-comment-box.css","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/lg-fb-comment-box.css.map","path":"css/lg-fb-comment-box.css.map","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/lg-fb-comment-box.min.css","path":"css/lg-fb-comment-box.min.css","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/lg-transitions.css","path":"css/lg-transitions.css","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/lg-transitions.css.map","path":"css/lg-transitions.css.map","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/lg-transitions.min.css","path":"css/lg-transitions.min.css","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/lightgallery.css","path":"css/lightgallery.css","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/lightgallery.css.map","path":"css/lightgallery.css.map","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/lightgallery.min.css","path":"css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/normalize.css","path":"css/normalize.css","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/share.min.css","path":"css/share.min.css","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/taurus.styl","path":"css/taurus.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/lg.eot","path":"fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/lg.svg","path":"fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/lg.ttf","path":"fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/lg.woff","path":"fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/archive.svg","path":"images/archive.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/close.png","path":"images/close.png","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/f_avicon.png","path":"images/f_avicon.png","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/fun.svg","path":"images/fun.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/home.svg","path":"images/home.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/me.jpg","path":"images/me.jpg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/next.png","path":"images/next.png","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/notes.svg","path":"images/notes.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/prev.png","path":"images/prev.png","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/projects.svg","path":"images/projects.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/resume.svg","path":"images/resume.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/search.svg","path":"images/search.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/theme-icon.svg","path":"images/theme-icon.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/theme-icon__.svg","path":"images/theme-icon__.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/uncategorized.svg","path":"images/uncategorized.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/cutie/source/img/video-play.png","path":"img/video-play.png","modified":0,"renderable":1},{"_id":"themes/cutie/source/img/vimeo-play.png","path":"img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/cutie/source/img/youtube-play.png","path":"img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/cutie/source/js/instantclick.min.js","path":"js/instantclick.min.js","modified":0,"renderable":1},{"_id":"themes/cutie/source/js/jquery.share.min.js","path":"js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/cutie/source/js/lg-zoom.min.js","path":"js/lg-zoom.min.js","modified":0,"renderable":1},{"_id":"themes/cutie/source/js/lightgallery.min.js","path":"js/lightgallery.min.js","modified":0,"renderable":1},{"_id":"themes/cutie/source/js/post.js","path":"js/post.js","modified":0,"renderable":1},{"_id":"themes/cutie/source/js/social-share.min.js","path":"js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/cutie/source/js/theme.js","path":"js/theme.js","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/gitment/default.css","path":"css/gitment/default.css","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/animations.styl","path":"css/scheme-taurus/animations.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/colors.styl","path":"css/scheme-taurus/colors.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/fonts.styl","path":"css/scheme-taurus/fonts.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/footer.styl","path":"css/scheme-taurus/footer.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/global.styl","path":"css/scheme-taurus/global.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/header.styl","path":"css/scheme-taurus/header.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/label.styl","path":"css/scheme-taurus/label.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/nav.styl","path":"css/scheme-taurus/nav.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/pagination.styl","path":"css/scheme-taurus/pagination.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/search.styl","path":"css/scheme-taurus/search.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/util.styl","path":"css/scheme-taurus/util.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/FontAwesome.otf","path":"fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/cutie/source/js/gitment.browser.js","path":"js/gitment.browser.js","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/archive/card.styl","path":"css/scheme-taurus/archive/card.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/archive/layout.styl","path":"css/scheme-taurus/archive/layout.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/code-highlight/tomorrow.styl","path":"css/scheme-taurus/code-highlight/tomorrow.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/index/appearance.styl","path":"css/scheme-taurus/index/appearance.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/index/card.styl","path":"css/scheme-taurus/index/card.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/index/layout.styl","path":"css/scheme-taurus/index/layout.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/post/card.styl","path":"css/scheme-taurus/post/card.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/post/layout.styl","path":"css/scheme-taurus/post/layout.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/post/numbering.styl","path":"css/scheme-taurus/post/numbering.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/css/scheme-taurus/post/topography.styl","path":"css/scheme-taurus/post/topography.styl","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/icons/blue-line/archive.svg","path":"images/icons/blue-line/archive.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/icons/blue-line/menu.svg","path":"images/icons/blue-line/menu.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/icons/blue-line/search.svg","path":"images/icons/blue-line/search.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/icons/blue-line/toc.svg","path":"images/icons/blue-line/toc.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/icons/blue-shadow/archive.svg","path":"images/icons/blue-shadow/archive.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/icons/blue-shadow/menu.svg","path":"images/icons/blue-shadow/menu.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/icons/blue-shadow/search.svg","path":"images/icons/blue-shadow/search.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/icons/blue-shadow/toc.svg","path":"images/icons/blue-shadow/toc.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/icons/colorful-outlined/archive.svg","path":"images/icons/colorful-outlined/archive.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/icons/colorful-outlined/menu.svg","path":"images/icons/colorful-outlined/menu.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/icons/colorful-outlined/search.svg","path":"images/icons/colorful-outlined/search.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/images/icons/colorful-outlined/toc.svg","path":"images/icons/colorful-outlined/toc.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/cutie/source/fonts/KGSecondChancesSketch.ttf","path":"fonts/KGSecondChancesSketch.ttf","modified":0,"renderable":1}],"Cache":[{"_id":"themes/cutie/.gitignore","hash":"5a17948ac7a2929cf45239a4a667a7cfdd2ae21d","modified":1520928897754},{"_id":"themes/cutie/LICENSE","hash":"df39ba2888e9f82ec24fb2ed432852ffecaa68e5","modified":1520928897770},{"_id":"themes/cutie/README.md","hash":"2ac8c2b1d0aa3b695ed5f8e688f39ecbaa57e50e","modified":1520928897785},{"_id":"themes/cutie/_config.yml","hash":"d2e32a9edf296d11b3a507f6c1de4b4686976c85","modified":1520933824845},{"_id":"source/_posts/First-Problem.md","hash":"452c4758993eb4c54812c6412f18893057c2245d","modified":1521193654559},{"_id":"source/_posts/ReadFile.md","hash":"5f42197c9e0134451b765603046b204e8b45424e","modified":1521093713381},{"_id":"source/_posts/Setting-Environment.md","hash":"f58d7e9796aa1de1cca53319b6208bb20156ab40","modified":1520959715269},{"_id":"source/_posts/introduction.md","hash":"8daa7b81e95964757853fa5eaedb103a8e80455c","modified":1520939967079},{"_id":"source/_posts/stack.md","hash":"7d308d893bb897a071c2c4667c24aac7913455ee","modified":1523700408628},{"_id":"source/search/index.md","hash":"ce709dcc8f3b31d6be0a2d940880fd7f21f6263f","modified":1520930361176},{"_id":"themes/cutie/languages/en.yml","hash":"d0e9a6615896b7fb7a81c75d044b10b3570885df","modified":1520928897832},{"_id":"themes/cutie/languages/zh-cn.yml","hash":"17b5eee26545ffe38050be63cd866e1e48e641be","modified":1520928897848},{"_id":"themes/cutie/layout/archive.swig","hash":"dd532d427534630aac2418015ac12b7af5535997","modified":1520928897848},{"_id":"themes/cutie/layout/category.swig","hash":"2cacaa6e2e73fdf84edd5467843d7d872981d731","modified":1520928897848},{"_id":"themes/cutie/layout/index.swig","hash":"de77dea54d631216d4a670a8a2b3ad9d4a15ae31","modified":1520928897863},{"_id":"themes/cutie/layout/layout.swig","hash":"214c7d5e02bb524b4d579e6e9b28f7cd5b060063","modified":1520928897863},{"_id":"themes/cutie/layout/page.swig","hash":"69c43ad5e01b33d24d3ee4129498e1b8c60a00b3","modified":1520928897879},{"_id":"themes/cutie/layout/post.swig","hash":"257d66cd58d647fc90bf788f85f53375ae2c49a2","modified":1520928897879},{"_id":"themes/cutie/layout/search.swig","hash":"8f0f8e81a60646a264d46bca2ee59f30a389afa8","modified":1520928897879},{"_id":"themes/cutie/layout/tag.swig","hash":"260bca96316e02b6f0d25a87124c71163ad3a7eb","modified":1520928897895},{"_id":"themes/cutie/scripts/util.js","hash":"fcfb09b11d63c941f075ca69f6cbe1232a2d92aa","modified":1520928898066},{"_id":"themes/cutie/layout/_partial/after-footer.swig","hash":"900021123dd3d87b4cd795eb3e0bc881258a1f8f","modified":1520928897895},{"_id":"themes/cutie/layout/_partial/archive.swig","hash":"26b3ab1a6f2b69d449e50b8038db9f2fcc07b452","modified":1520928897910},{"_id":"themes/cutie/layout/_partial/article-category.swig","hash":"96d6e37d3ce66604144428a5ea486d7029212aff","modified":1520928897910},{"_id":"themes/cutie/layout/_partial/article-tags.swig","hash":"f55067810ab65d76cdaaae7b0c725d96354ea988","modified":1520928897910},{"_id":"themes/cutie/layout/_partial/article.swig","hash":"646faa6562173b9b58675c779b6e7cc2db47ff68","modified":1520928897926},{"_id":"themes/cutie/layout/_partial/card-archive.swig","hash":"6254ad2870b4c6240715e0c84d9ed502701ab22c","modified":1520928897926},{"_id":"themes/cutie/layout/_partial/card-text.swig","hash":"32e6e9140b57ff7d2b46b342e72c1b4d3882d9a8","modified":1520928897941},{"_id":"themes/cutie/layout/_partial/card-tschart.swig","hash":"d3c7d0456cc48bb9b8fc0dd95be0caaefcde430d","modified":1520928897941},{"_id":"themes/cutie/layout/_partial/card.swig","hash":"774706a7b20a196995746a9fceba45f17530bb4c","modified":1520928897941},{"_id":"themes/cutie/layout/_partial/comment-html.swig","hash":"96164f051479739da84ec9de8d0d5fa786150e5f","modified":1520928897957},{"_id":"themes/cutie/layout/_partial/footer.swig","hash":"aa3614965153db99152937f735ec6695a146cd58","modified":1520929735762},{"_id":"themes/cutie/layout/_partial/google_analytics.swig","hash":"35b4c88cefadb4cc467f6efafd5f49358e995925","modified":1520928897973},{"_id":"themes/cutie/layout/_partial/head.swig","hash":"65568028a5ddf67f866a313093219202c3ed3ace","modified":1520928897973},{"_id":"themes/cutie/layout/_partial/header.swig","hash":"6dcacd9d1a52befa64c4b424d9ec2b9ab92ae609","modified":1520928897973},{"_id":"themes/cutie/layout/_partial/nav.swig","hash":"d05866cc4a8ad586df151fe5cc0a55a1aacda9c6","modified":1520928897988},{"_id":"themes/cutie/layout/_partial/page.swig","hash":"778dbcaf82290c234ac17f8ccafcb78f8ad71e45","modified":1520928897988},{"_id":"themes/cutie/layout/_partial/pagination.swig","hash":"954523b4f6480e4c4c063c28a9e2ba84256913d4","modified":1520928898004},{"_id":"themes/cutie/layout/_partial/scheme-css.swig","hash":"c440707ed863ba011dc81f127e381e747ae11feb","modified":1520928898004},{"_id":"themes/cutie/layout/_partial/toc.swig","hash":"d7ae3ec0e5159f9579ee93aefe5de5f1ef5f1c18","modified":1520928898004},{"_id":"themes/cutie/layout/_third_party/disqus.swig","hash":"a8dcaac9d769eb3ed7a99017b7c821b8d38a5294","modified":1520928898019},{"_id":"themes/cutie/layout/_third_party/gitment.swig","hash":"b39bf03bab62b6b324bf25ba194d8b62c8f5add7","modified":1520928898019},{"_id":"themes/cutie/layout/_third_party/gitment_head.swig","hash":"d347db77052b05d8e866a76b984e31c5cbbd41d6","modified":1520928898035},{"_id":"themes/cutie/layout/_third_party/instantclick.swig","hash":"0059d40e17c87bbdf935a272d13664c2014aa451","modified":1520928898035},{"_id":"themes/cutie/layout/_third_party/lightgallery.swig","hash":"319df8718f26b79742b9eb54818a5666975a08a2","modified":1520928898051},{"_id":"themes/cutie/layout/_third_party/valine.swig","hash":"4d714b7a3c3b38db2cfaef917b69ce127865c356","modified":1520928898051},{"_id":"themes/cutie/layout/_third_party/valine_head.swig","hash":"152ee54fd079b5490a3b2ebb8616b54d5ce97017","modified":1520928898051},{"_id":"themes/cutie/source/css/highlight.styl","hash":"54b07250b5c7e06f1e5b07d7bb7d05f208fe1858","modified":1520928898082},{"_id":"themes/cutie/source/css/lg-fb-comment-box.css","hash":"10c9630e41bb8d6bb7f75a3bfe8cdb33451ed7ba","modified":1520928898082},{"_id":"themes/cutie/source/css/lg-fb-comment-box.css.map","hash":"5281d2cfb0ef278940c4860ea9aa7ef86d3dbc8d","modified":1520928898082},{"_id":"themes/cutie/source/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1520928898097},{"_id":"themes/cutie/source/css/lg-transitions.css","hash":"2866c3f1eda31ed34485ff3511bcfb706d78ac56","modified":1520928898097},{"_id":"themes/cutie/source/css/lg-transitions.css.map","hash":"6ee19f99bca3ecf2fa0d6f07fb5c200db07ddd11","modified":1520928898113},{"_id":"themes/cutie/source/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1520928898113},{"_id":"themes/cutie/source/css/lightgallery.css","hash":"a41c84f1e5f7c672f4a795c50bdbc9b7a2229db8","modified":1520928898129},{"_id":"themes/cutie/source/css/lightgallery.css.map","hash":"91788030e3c7107b6b4bf50a82d4309368850488","modified":1520928898129},{"_id":"themes/cutie/source/css/lightgallery.min.css","hash":"9e76bdad163856774a96b1230a08dc506600a973","modified":1520928898144},{"_id":"themes/cutie/source/css/normalize.css","hash":"4ecdd84d8f3ef4031150a9534ae5ad0c22ecaf57","modified":1520928898144},{"_id":"themes/cutie/source/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1520928898144},{"_id":"themes/cutie/source/css/taurus.styl","hash":"d88a48d5f285b7cc041ad39b067c8be66c007bc1","modified":1520928898160},{"_id":"themes/cutie/source/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1520928898456},{"_id":"themes/cutie/source/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1520928898456},{"_id":"themes/cutie/source/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1520928898472},{"_id":"themes/cutie/source/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1520928898472},{"_id":"themes/cutie/source/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1520928898487},{"_id":"themes/cutie/source/fonts/lg.svg","hash":"1dba95664d2933fe1c22fb95a2e1e3a21839870b","modified":1520928898487},{"_id":"themes/cutie/source/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1520928898503},{"_id":"themes/cutie/source/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1520928898503},{"_id":"themes/cutie/source/images/archive.svg","hash":"76f32c1f54c5c21f021b949dfe08a865de4f0a3c","modified":1520928898519},{"_id":"themes/cutie/source/images/close.png","hash":"3ca48361cfe0e41163023d03c26296f375bb3eac","modified":1520928898581},{"_id":"themes/cutie/source/images/f_avicon.png","hash":"9287f91fbabb5bbc2c5200bc4547c28c9d3367fd","modified":1520928898597},{"_id":"themes/cutie/source/images/favicon.png","hash":"c6076c338af9fda2f9ed93a7e276098d47cf76dc","modified":1520931587167},{"_id":"themes/cutie/source/images/fun.svg","hash":"ecac190e58378d5dfcea8a4d496cd00b842a5a79","modified":1520928898643},{"_id":"themes/cutie/source/images/home.svg","hash":"ee6787a093ef3ae97f18d267da1fa63f56e03c4b","modified":1520928898643},{"_id":"themes/cutie/source/images/loading.gif","hash":"cf720b50cf8dde0e1a84ce1c6a77788bfc5882d5","modified":1520928898659},{"_id":"themes/cutie/source/images/me.jpg","hash":"59261255533a61fcbc0451aebeaa1db9efa1a795","modified":1484238204661},{"_id":"themes/cutie/source/images/next.png","hash":"777e92c050f600b4519299c3d786b8f2f459fea4","modified":1520928898659},{"_id":"themes/cutie/source/images/notes.svg","hash":"334802e6bf4de62d929ae7bb885b7fc6912330a9","modified":1520928898675},{"_id":"themes/cutie/source/images/prev.png","hash":"6640a3432f7ba7aea6129cdf7a5d3eabd47c295c","modified":1520928898690},{"_id":"themes/cutie/source/images/projects.svg","hash":"6655b7ecdda5090cae3847dc33b32e400e194fad","modified":1520928898690},{"_id":"themes/cutie/source/images/resume.svg","hash":"f752767edc97a9b04ea79a610194215ff7beec46","modified":1520928898706},{"_id":"themes/cutie/source/images/search.svg","hash":"1ac0f922db7486a765a8a541024533e45eb121c8","modified":1520928898706},{"_id":"themes/cutie/source/images/theme-icon.svg","hash":"05b47da99ce6bb14141dbe6ac04a9fcbed335118","modified":1520933675361},{"_id":"themes/cutie/source/images/theme-icon__.svg","hash":"5a9bc42f10856224345d0b907f0891207beb7cc8","modified":1520928898721},{"_id":"themes/cutie/source/images/uncategorized.svg","hash":"950bc2874a6dbbd8259e4575e70aea8ea68fc888","modified":1520928898721},{"_id":"themes/cutie/source/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1520928898846},{"_id":"themes/cutie/source/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1520928898846},{"_id":"themes/cutie/source/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1520928898862},{"_id":"themes/cutie/source/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1520928898862},{"_id":"themes/cutie/source/js/instantclick.min.js","hash":"76b10070628006c82c2e5324fc56a7db0a019112","modified":1520928898877},{"_id":"themes/cutie/source/js/jquery.share.min.js","hash":"e44c27c50a7b7da1795b1e4c30cc85fc93c36c43","modified":1520928898893},{"_id":"themes/cutie/source/js/lg-zoom.min.js","hash":"658b1ec3d6e13883ed7bb9c3575690e81c7b0b50","modified":1520928898893},{"_id":"themes/cutie/source/js/lightgallery.min.js","hash":"db1d27bd47e04b15ecbec56625acc0ce74924c4d","modified":1520928898909},{"_id":"themes/cutie/source/js/post.js","hash":"c42003e0212ce3269200c27790edb42618cdd851","modified":1520928898909},{"_id":"themes/cutie/source/js/social-share.min.js","hash":"4798c0fe6c75506eebbbb3cab8cf01dcb7f59908","modified":1520928898909},{"_id":"themes/cutie/source/js/theme.js","hash":"a7cabdd6a32c8f0992d6156894386565ae858bbd","modified":1520928898924},{"_id":"themes/cutie/source/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1520928898441},{"_id":"themes/cutie/source/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1520928898441},{"_id":"themes/cutie/source/css/_lib/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1520928898175},{"_id":"themes/cutie/source/css/_lib/normalize.css","hash":"78be13772085af36eeb5c8841acad4956f81c1f4","modified":1520928898175},{"_id":"themes/cutie/source/css/gitment/default.css","hash":"7fbb18b73b44ed11193739c55fce53a6f173cf68","modified":1520928898191},{"_id":"themes/cutie/source/css/scheme-taurus/animations.styl","hash":"52c0642061c5f583f4b3b77292c8f4bb27781a92","modified":1520928898191},{"_id":"themes/cutie/source/css/scheme-taurus/colors.styl","hash":"64f90217451cb17319b9aa2c70dbb544eeb9e0b8","modified":1520928898207},{"_id":"themes/cutie/source/css/scheme-taurus/fonts.styl","hash":"ef21103976ee68608a94417b0316c82442b80085","modified":1520928898207},{"_id":"themes/cutie/source/css/scheme-taurus/footer.styl","hash":"d0899ae307634cd295f0be1676c840a9fd521d26","modified":1520928898222},{"_id":"themes/cutie/source/css/scheme-taurus/global.styl","hash":"e0da21c05de5abd405d92463dab4fe66d874daa3","modified":1520928898222},{"_id":"themes/cutie/source/css/scheme-taurus/header.styl","hash":"54d5294d3fc08e288cd1a8b017939b755186c059","modified":1520928898222},{"_id":"themes/cutie/source/css/scheme-taurus/label.styl","hash":"491a7520a4c6ce791959bbdbf0b62ee73918cd5d","modified":1520928898238},{"_id":"themes/cutie/source/css/scheme-taurus/nav.styl","hash":"a80de32667e1553b52e441ce9cae561960efaaac","modified":1520928898238},{"_id":"themes/cutie/source/css/scheme-taurus/pagination.styl","hash":"41fe9edddf78e6e02d040b73c487d4e177528852","modified":1520928898253},{"_id":"themes/cutie/source/css/scheme-taurus/search.styl","hash":"36904fc7fc828eb1615a104356e05a5eb27b84b1","modified":1520928898253},{"_id":"themes/cutie/source/css/scheme-taurus/util.styl","hash":"bfae35f8cb36221934896162128d80fba488a32a","modified":1520928898269},{"_id":"themes/cutie/source/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1520928898378},{"_id":"themes/cutie/source/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1520928898394},{"_id":"themes/cutie/source/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1520928898425},{"_id":"themes/cutie/source/js/gitment.browser.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1520928898877},{"_id":"themes/cutie/source/css/scheme-taurus/archive/card.styl","hash":"e48c29a33d8ef4655756402475cc0145ad906d80","modified":1520928898269},{"_id":"themes/cutie/source/css/scheme-taurus/archive/layout.styl","hash":"248461a6133863529ef8f2bed4f45eb8650f14e2","modified":1520928898285},{"_id":"themes/cutie/source/css/scheme-taurus/code-highlight/tomorrow.styl","hash":"48baffd2cf085d43ff1248405e651e16d37e2441","modified":1520928898285},{"_id":"themes/cutie/source/css/scheme-taurus/index/appearance.styl","hash":"cfd2057bbe3d9ce18eb20f4a096a1cc150e8dac8","modified":1520928898300},{"_id":"themes/cutie/source/css/scheme-taurus/index/card.styl","hash":"9f5b281c7c6727dccd1e5edbda4314a1e09cdf7c","modified":1520928898300},{"_id":"themes/cutie/source/css/scheme-taurus/index/layout.styl","hash":"dda9d006416986bc72d1938c6d1d1188d3f19be4","modified":1520928898316},{"_id":"themes/cutie/source/css/scheme-taurus/post/card.styl","hash":"688a7c645f1f3bbb92b72efc3e2a36802d515cdf","modified":1520928898316},{"_id":"themes/cutie/source/css/scheme-taurus/post/layout.styl","hash":"df3fbe14ef622294c03087093d66231d79db6d04","modified":1520928898331},{"_id":"themes/cutie/source/css/scheme-taurus/post/numbering.styl","hash":"92e53715edfd1deb4e070b9d738768a0d1b2f36c","modified":1520928898331},{"_id":"themes/cutie/source/css/scheme-taurus/post/topography.styl","hash":"7485bbca6a69b4a755b4580bf8f00fc78482c4d0","modified":1520928898347},{"_id":"themes/cutie/source/images/icons/blue-line/archive.svg","hash":"523a86257c15b2804f6bad2ddc43a071d208bd14","modified":1520928898737},{"_id":"themes/cutie/source/images/icons/blue-line/menu.svg","hash":"f469b35fa361048b490fe4a3ab4d000d9e392540","modified":1520928898737},{"_id":"themes/cutie/source/images/icons/blue-line/search.svg","hash":"75184d666900ba3648c9886bbebcb5e57bdcccac","modified":1520928898753},{"_id":"themes/cutie/source/images/icons/blue-line/toc.svg","hash":"b3ce4cc40507a5b3f00e56a9bc9e77df7481dad8","modified":1520928898768},{"_id":"themes/cutie/source/images/icons/blue-shadow/archive.svg","hash":"c9210a5b67cf58e66425e519c21043eb9f2f7cf3","modified":1520928898784},{"_id":"themes/cutie/source/images/icons/blue-shadow/menu.svg","hash":"9d84dd6271955a8a729c6d1ea50a5dbb7ea9a901","modified":1520928898784},{"_id":"themes/cutie/source/images/icons/blue-shadow/search.svg","hash":"c28731a4bea156043726e3e20d94641fa873b257","modified":1520928898799},{"_id":"themes/cutie/source/images/icons/blue-shadow/toc.svg","hash":"1bd9d6b7d6a7fd1ccf527fcf53066dd56b109265","modified":1520928898799},{"_id":"themes/cutie/source/images/icons/colorful-outlined/archive.svg","hash":"945a0286c10f24472278962e91711d4c1c0fe960","modified":1520928898815},{"_id":"themes/cutie/source/images/icons/colorful-outlined/menu.svg","hash":"79136adce7a7131349021a045e14f3d04595f70b","modified":1520928898815},{"_id":"themes/cutie/source/images/icons/colorful-outlined/search.svg","hash":"f9a304540b2818c0167336148094a124c205e1cb","modified":1520928898831},{"_id":"themes/cutie/source/images/icons/colorful-outlined/toc.svg","hash":"41605f4fe968d4246d86054364fbfb78af093e75","modified":1520928898831},{"_id":"themes/cutie/source/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1520928898425},{"_id":"themes/cutie/source/fonts/KGSecondChancesSketch.ttf","hash":"a58586ae49ee62410cd4a8c5b7e9657d6339df6b","modified":1520928898394},{"_id":"source/_posts/palindrome.md","hash":"2cec22b85cac270015c719a1906a33ebbe6b84ab","modified":1524901860243},{"_id":"public/search/index.html","hash":"f0cc1cee3b4a386f10cd54575a291d1d93c4b8ae","modified":1524901924564},{"_id":"public/2018/03/15/ReadFile/index.html","hash":"8fa1a3fbc4861a6d746f58e82cb521aeaeb34f0d","modified":1524901924584},{"_id":"public/2018/03/13/Setting-Environment/index.html","hash":"067bde999d5bd52e2fc15dfb52640abd6a212770","modified":1524901924585},{"_id":"public/2018/03/13/introduction/index.html","hash":"37847edf1cd2749282fda4d0577065cc91b04166","modified":1524901924585},{"_id":"public/archives/index.html","hash":"a32ab12d88dc3dbf3b11a97bff7bd4b259715d7e","modified":1524901924585},{"_id":"public/archives/2018/index.html","hash":"21f87eb6cfe6581b6753d3e48ccdf67d2efe3b09","modified":1524901924585},{"_id":"public/index.html","hash":"02cbd1908231fce0c0a33422e4fc4e143cd83c60","modified":1524901924585},{"_id":"public/tags/rust/index.html","hash":"c0276c404fb780547644f718dc1047c6fc4840bb","modified":1524901924585},{"_id":"public/tags/Rust/index.html","hash":"ac3b340e98f40d4ca8de7569d89fd4c3f48db313","modified":1524901924585},{"_id":"public/tags/Algorithms/index.html","hash":"f95e90c1a8a590802bccbb5873143d425a8a6710","modified":1524901924586},{"_id":"public/tags/HackerEarth/index.html","hash":"df45436cd8056b25544cd3e9c5d9c0aad691e66b","modified":1524901924586},{"_id":"public/tags/Problems/index.html","hash":"7bf47c9fe281008a2c7be8b67ad913d9fce3f382","modified":1524901924586},{"_id":"public/2018/03/16/First-Problem/index.html","hash":"8f01f4b066153838e3232f6055e0c1cfb97d3ae2","modified":1524901924586},{"_id":"public/2018/04/28/palindrome/index.html","hash":"85c4742c8584967989b14fbcab81b9f4eb8328ee","modified":1524901924586},{"_id":"public/2018/04/14/stack/index.html","hash":"0daa4c1886bbd301fde3fd5278a58a57163e698a","modified":1524901924587}],"Category":[],"Data":[],"Page":[{"title":"search","date":"2018-03-13T14:08:36.000Z","layout":"search","_content":"","source":"search/index.md","raw":"---\ntitle: search\ndate: 2018-03-13 14:08:36\nlayout: search\n---\n","updated":"2018-03-13T08:39:21.176Z","path":"search/index.html","comments":1,"_id":"cjgj2rbuu0001v08ldsx5vnh1","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"ReadFile","date":"2018-03-15T11:30:02.000Z","_content":"\n#Reading file\nin this post we will learn how to read a file in rust.\nas we will need it while getting input for program. Let's start with simple example.","source":"_posts/ReadFile.md","raw":"---\ntitle: ReadFile\ndate: 2018-03-15 11:30:02\ntags: rust\n---\n\n#Reading file\nin this post we will learn how to read a file in rust.\nas we will need it while getting input for program. Let's start with simple example.","slug":"ReadFile","published":1,"updated":"2018-03-15T06:01:53.381Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjgj2rbun0000v08lzn0x4n06","content":"<p>#Reading file<br>in this post we will learn how to read a file in rust.<br>as we will need it while getting input for program. Let’s start with simple example.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>#Reading file<br>in this post we will learn how to read a file in rust.<br>as we will need it while getting input for program. Let’s start with simple example.</p>\n"},{"title":"First Problem","date":"2018-03-16T11:51:14.000Z","_content":"\n# First Problem\n\nLet's start our first problem to solve. [Problem](https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/monk-and-lucky-minimum-3/)\n\n>Problem Statement: Monk just purchased an array A having N integers. Monk is very superstitious. He calls the array A Lucky if the frequency of the minimum element is odd, otherwise he considers it Unlucky. Help Monk in finding out if the array is Lucky or not.\n\nit's very simple and straight forward problem.\n\nThis problem we will solve in two step's\n* First : Finding min.\n* second: Calculating Frequency.\n\n### Getting User Input:\nBefore that we need to get user input.\n\nInput:\nFirst line consists of a single integer T denoting the number of test cases.\nFirst line of each test case consists of a single integer N denoting the size of array A.\nSecond line of each test case consists of N space separated integers denoting the array A.\n\n```$xslt\n//getting input for problem.\n    let mut T: i32;\n    let mut N: i32;\n    let mut array:Vec<i32> = vec![];\n\n    T = readInt();\n    println!(\"T :{}\",T);\n    N = readInt();\n    println!(\"N : {}\",N);\n```\ncode to get user input. Here is the readInt method code which \nwill get input as string from user and parse it into <i32>\n\n```$xslt\nfn readInt() -> i32{\n    let mut ip_txt = String::new();\n    io::stdin().read_line(&mut ip_txt).expect(\"error while reading\");\n    let trimed = ip_txt.trim();\n\n    match trimed.parse::<i32>() {\n        Ok(value) => value,\n        Err(E) => 00000,\n    }\n}\n```\n### First Part:\nNow first part of the program. Finding min. this we will do by using linear search.\n\n```$xslt\n  //first part: Find Min:\n\n    let mut min = 999999999;\n    for index in 0..N {\n        if min > array[index]{\n            min = array[index];\n        }\n    }\n```\n### Second Part: \nNow the second part of the problem.\n\n```\n  // Now second part is to find frequency of the min element.\n    let mut freq: usize = 0;\n    for index in 0..N {\n        if min == array[index]{\n            freq += 1;\n        }\n    }\n\n    match freq%2 {\n        0 => println!(\"Unlucky\"),\n        1 => println!(\"Lucky\"),\n        _ => print!(\"Error\"),\n    }\n```\n\nSource [code](https://github.com/vksmgr); ","source":"_posts/First-Problem.md","raw":"---\ntitle: First Problem\ndate: 2018-03-16 11:51:14\ntags:\n    -   Rust\n    -   Algorithms\n    -   HackerEarth\n    -   Problems\n---\n\n# First Problem\n\nLet's start our first problem to solve. [Problem](https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/monk-and-lucky-minimum-3/)\n\n>Problem Statement: Monk just purchased an array A having N integers. Monk is very superstitious. He calls the array A Lucky if the frequency of the minimum element is odd, otherwise he considers it Unlucky. Help Monk in finding out if the array is Lucky or not.\n\nit's very simple and straight forward problem.\n\nThis problem we will solve in two step's\n* First : Finding min.\n* second: Calculating Frequency.\n\n### Getting User Input:\nBefore that we need to get user input.\n\nInput:\nFirst line consists of a single integer T denoting the number of test cases.\nFirst line of each test case consists of a single integer N denoting the size of array A.\nSecond line of each test case consists of N space separated integers denoting the array A.\n\n```$xslt\n//getting input for problem.\n    let mut T: i32;\n    let mut N: i32;\n    let mut array:Vec<i32> = vec![];\n\n    T = readInt();\n    println!(\"T :{}\",T);\n    N = readInt();\n    println!(\"N : {}\",N);\n```\ncode to get user input. Here is the readInt method code which \nwill get input as string from user and parse it into <i32>\n\n```$xslt\nfn readInt() -> i32{\n    let mut ip_txt = String::new();\n    io::stdin().read_line(&mut ip_txt).expect(\"error while reading\");\n    let trimed = ip_txt.trim();\n\n    match trimed.parse::<i32>() {\n        Ok(value) => value,\n        Err(E) => 00000,\n    }\n}\n```\n### First Part:\nNow first part of the program. Finding min. this we will do by using linear search.\n\n```$xslt\n  //first part: Find Min:\n\n    let mut min = 999999999;\n    for index in 0..N {\n        if min > array[index]{\n            min = array[index];\n        }\n    }\n```\n### Second Part: \nNow the second part of the problem.\n\n```\n  // Now second part is to find frequency of the min element.\n    let mut freq: usize = 0;\n    for index in 0..N {\n        if min == array[index]{\n            freq += 1;\n        }\n    }\n\n    match freq%2 {\n        0 => println!(\"Unlucky\"),\n        1 => println!(\"Lucky\"),\n        _ => print!(\"Error\"),\n    }\n```\n\nSource [code](https://github.com/vksmgr); ","slug":"First-Problem","published":1,"updated":"2018-03-16T09:47:34.559Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjgj2rbuv0002v08l2oodukbh","content":"<h1 id=\"First-Problem\"><a href=\"#First-Problem\" class=\"headerlink\" title=\"First Problem\"></a>First Problem</h1><p>Let’s start our first problem to solve. <a href=\"https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/monk-and-lucky-minimum-3/\" target=\"_blank\" rel=\"noopener\">Problem</a></p>\n<blockquote>\n<p>Problem Statement: Monk just purchased an array A having N integers. Monk is very superstitious. He calls the array A Lucky if the frequency of the minimum element is odd, otherwise he considers it Unlucky. Help Monk in finding out if the array is Lucky or not.</p>\n</blockquote>\n<p>it’s very simple and straight forward problem.</p>\n<p>This problem we will solve in two step’s</p>\n<ul>\n<li>First : Finding min.</li>\n<li>second: Calculating Frequency.</li>\n</ul>\n<h3 id=\"Getting-User-Input\"><a href=\"#Getting-User-Input\" class=\"headerlink\" title=\"Getting User Input:\"></a>Getting User Input:</h3><p>Before that we need to get user input.</p>\n<p>Input:<br>First line consists of a single integer T denoting the number of test cases.<br>First line of each test case consists of a single integer N denoting the size of array A.<br>Second line of each test case consists of N space separated integers denoting the array A.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//getting input for problem.</span><br><span class=\"line\">    let mut T: i32;</span><br><span class=\"line\">    let mut N: i32;</span><br><span class=\"line\">    let mut array:Vec&lt;i32&gt; = vec![];</span><br><span class=\"line\"></span><br><span class=\"line\">    T = readInt();</span><br><span class=\"line\">    println!(&quot;T :&#123;&#125;&quot;,T);</span><br><span class=\"line\">    N = readInt();</span><br><span class=\"line\">    println!(&quot;N : &#123;&#125;&quot;,N);</span><br></pre></td></tr></table></figure>\n<p>code to get user input. Here is the readInt method code which<br>will get input as string from user and parse it into <i32></i32></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fn readInt() -&gt; i32&#123;</span><br><span class=\"line\">    let mut ip_txt = String::new();</span><br><span class=\"line\">    io::stdin().read_line(&amp;mut ip_txt).expect(&quot;error while reading&quot;);</span><br><span class=\"line\">    let trimed = ip_txt.trim();</span><br><span class=\"line\"></span><br><span class=\"line\">    match trimed.parse::&lt;i32&gt;() &#123;</span><br><span class=\"line\">        Ok(value) =&gt; value,</span><br><span class=\"line\">        Err(E) =&gt; 00000,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"First-Part\"><a href=\"#First-Part\" class=\"headerlink\" title=\"First Part:\"></a>First Part:</h3><p>Now first part of the program. Finding min. this we will do by using linear search.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//first part: Find Min:</span><br><span class=\"line\"></span><br><span class=\"line\">  let mut min = 999999999;</span><br><span class=\"line\">  for index in 0..N &#123;</span><br><span class=\"line\">      if min &gt; array[index]&#123;</span><br><span class=\"line\">          min = array[index];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Second-Part\"><a href=\"#Second-Part\" class=\"headerlink\" title=\"Second Part:\"></a>Second Part:</h3><p>Now the second part of the problem.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Now second part is to find frequency of the min element.</span><br><span class=\"line\">  let mut freq: usize = 0;</span><br><span class=\"line\">  for index in 0..N &#123;</span><br><span class=\"line\">      if min == array[index]&#123;</span><br><span class=\"line\">          freq += 1;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  match freq%2 &#123;</span><br><span class=\"line\">      0 =&gt; println!(&quot;Unlucky&quot;),</span><br><span class=\"line\">      1 =&gt; println!(&quot;Lucky&quot;),</span><br><span class=\"line\">      _ =&gt; print!(&quot;Error&quot;),</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>Source <a href=\"https://github.com/vksmgr\" target=\"_blank\" rel=\"noopener\">code</a>; </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"First-Problem\"><a href=\"#First-Problem\" class=\"headerlink\" title=\"First Problem\"></a>First Problem</h1><p>Let’s start our first problem to solve. <a href=\"https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/monk-and-lucky-minimum-3/\" target=\"_blank\" rel=\"noopener\">Problem</a></p>\n<blockquote>\n<p>Problem Statement: Monk just purchased an array A having N integers. Monk is very superstitious. He calls the array A Lucky if the frequency of the minimum element is odd, otherwise he considers it Unlucky. Help Monk in finding out if the array is Lucky or not.</p>\n</blockquote>\n<p>it’s very simple and straight forward problem.</p>\n<p>This problem we will solve in two step’s</p>\n<ul>\n<li>First : Finding min.</li>\n<li>second: Calculating Frequency.</li>\n</ul>\n<h3 id=\"Getting-User-Input\"><a href=\"#Getting-User-Input\" class=\"headerlink\" title=\"Getting User Input:\"></a>Getting User Input:</h3><p>Before that we need to get user input.</p>\n<p>Input:<br>First line consists of a single integer T denoting the number of test cases.<br>First line of each test case consists of a single integer N denoting the size of array A.<br>Second line of each test case consists of N space separated integers denoting the array A.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//getting input for problem.</span><br><span class=\"line\">    let mut T: i32;</span><br><span class=\"line\">    let mut N: i32;</span><br><span class=\"line\">    let mut array:Vec&lt;i32&gt; = vec![];</span><br><span class=\"line\"></span><br><span class=\"line\">    T = readInt();</span><br><span class=\"line\">    println!(&quot;T :&#123;&#125;&quot;,T);</span><br><span class=\"line\">    N = readInt();</span><br><span class=\"line\">    println!(&quot;N : &#123;&#125;&quot;,N);</span><br></pre></td></tr></table></figure>\n<p>code to get user input. Here is the readInt method code which<br>will get input as string from user and parse it into <i32></i32></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fn readInt() -&gt; i32&#123;</span><br><span class=\"line\">    let mut ip_txt = String::new();</span><br><span class=\"line\">    io::stdin().read_line(&amp;mut ip_txt).expect(&quot;error while reading&quot;);</span><br><span class=\"line\">    let trimed = ip_txt.trim();</span><br><span class=\"line\"></span><br><span class=\"line\">    match trimed.parse::&lt;i32&gt;() &#123;</span><br><span class=\"line\">        Ok(value) =&gt; value,</span><br><span class=\"line\">        Err(E) =&gt; 00000,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"First-Part\"><a href=\"#First-Part\" class=\"headerlink\" title=\"First Part:\"></a>First Part:</h3><p>Now first part of the program. Finding min. this we will do by using linear search.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//first part: Find Min:</span><br><span class=\"line\"></span><br><span class=\"line\">  let mut min = 999999999;</span><br><span class=\"line\">  for index in 0..N &#123;</span><br><span class=\"line\">      if min &gt; array[index]&#123;</span><br><span class=\"line\">          min = array[index];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Second-Part\"><a href=\"#Second-Part\" class=\"headerlink\" title=\"Second Part:\"></a>Second Part:</h3><p>Now the second part of the problem.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Now second part is to find frequency of the min element.</span><br><span class=\"line\">  let mut freq: usize = 0;</span><br><span class=\"line\">  for index in 0..N &#123;</span><br><span class=\"line\">      if min == array[index]&#123;</span><br><span class=\"line\">          freq += 1;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  match freq%2 &#123;</span><br><span class=\"line\">      0 =&gt; println!(&quot;Unlucky&quot;),</span><br><span class=\"line\">      1 =&gt; println!(&quot;Lucky&quot;),</span><br><span class=\"line\">      _ =&gt; print!(&quot;Error&quot;),</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>Source <a href=\"https://github.com/vksmgr\" target=\"_blank\" rel=\"noopener\">code</a>; </p>\n"},{"title":"Setting Environment","date":"2018-03-13T16:01:03.000Z","_content":"\n# Setting Environment\n\nwe are going to use [rust] (https://www.rust-lang.org/en-US/) language for solving algorithm problems. \n","source":"_posts/Setting-Environment.md","raw":"---\ntitle: Setting Environment\ndate: 2018-03-13 16:01:03\ntags:\n---\n\n# Setting Environment\n\nwe are going to use [rust] (https://www.rust-lang.org/en-US/) language for solving algorithm problems. \n","slug":"Setting-Environment","published":1,"updated":"2018-03-13T16:48:35.269Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjgj2rbv30004v08lsotrgupg","content":"<h1 id=\"Setting-Environment\"><a href=\"#Setting-Environment\" class=\"headerlink\" title=\"Setting Environment\"></a>Setting Environment</h1><p>we are going to use [rust] (<a href=\"https://www.rust-lang.org/en-US/\" target=\"_blank\" rel=\"noopener\">https://www.rust-lang.org/en-US/</a>) language for solving algorithm problems. </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Setting-Environment\"><a href=\"#Setting-Environment\" class=\"headerlink\" title=\"Setting Environment\"></a>Setting Environment</h1><p>we are going to use [rust] (<a href=\"https://www.rust-lang.org/en-US/\" target=\"_blank\" rel=\"noopener\">https://www.rust-lang.org/en-US/</a>) language for solving algorithm problems. </p>\n"},{"title":"introduction","date":"2018-03-13T15:43:02.000Z","_content":"# Introduction\n\nThis blog is about leaning algorithms using rust. in this series we are going to learn\n\n- Setting environment.\n- rust programming language.\n- And algorithms. \n\nAfter these we are going to start solving problems from well known book's\nlike\n- Algotrithm Books.\n    * CLRS\n    * Sahani\n- Craking coding interview.\n\nthese series include everything which you will need to start solving algorithm problems using rust.\n\n\n\n ","source":"_posts/introduction.md","raw":"---\ntitle: introduction\ndate: 2018-03-13 15:43:02\ntags: Rust\n---\n# Introduction\n\nThis blog is about leaning algorithms using rust. in this series we are going to learn\n\n- Setting environment.\n- rust programming language.\n- And algorithms. \n\nAfter these we are going to start solving problems from well known book's\nlike\n- Algotrithm Books.\n    * CLRS\n    * Sahani\n- Craking coding interview.\n\nthese series include everything which you will need to start solving algorithm problems using rust.\n\n\n\n ","slug":"introduction","published":1,"updated":"2018-03-13T11:19:27.079Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjgj2rbv60005v08lb08hinv9","content":"<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>This blog is about leaning algorithms using rust. in this series we are going to learn</p>\n<ul>\n<li>Setting environment.</li>\n<li>rust programming language.</li>\n<li>And algorithms. </li>\n</ul>\n<p>After these we are going to start solving problems from well known book’s<br>like</p>\n<ul>\n<li>Algotrithm Books.<ul>\n<li>CLRS</li>\n<li>Sahani</li>\n</ul>\n</li>\n<li>Craking coding interview.</li>\n</ul>\n<p>these series include everything which you will need to start solving algorithm problems using rust.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>This blog is about leaning algorithms using rust. in this series we are going to learn</p>\n<ul>\n<li>Setting environment.</li>\n<li>rust programming language.</li>\n<li>And algorithms. </li>\n</ul>\n<p>After these we are going to start solving problems from well known book’s<br>like</p>\n<ul>\n<li>Algotrithm Books.<ul>\n<li>CLRS</li>\n<li>Sahani</li>\n</ul>\n</li>\n<li>Craking coding interview.</li>\n</ul>\n<p>these series include everything which you will need to start solving algorithm problems using rust.</p>\n"},{"title":"stack","date":"2018-04-14T15:33:20.000Z","_content":"\n#Stack \n<hr>\n\nWelcome back in this post we are going to implement stack data structure using rust\n\n \" Stack is very basic data structure which follow LIFO Order. \"\n \nFirst we will divide the solution in parts:\n ","source":"_posts/stack.md","raw":"---\ntitle: stack\ndate: 2018-04-14 15:33:20\ntags:\n---\n\n#Stack \n<hr>\n\nWelcome back in this post we are going to implement stack data structure using rust\n\n \" Stack is very basic data structure which follow LIFO Order. \"\n \nFirst we will divide the solution in parts:\n ","slug":"stack","published":1,"updated":"2018-04-14T10:06:48.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjgj2rbv80006v08l22cy7vf3","content":"<p>#Stack </p>\n<hr>\n\n<p>Welcome back in this post we are going to implement stack data structure using rust</p>\n<p> “ Stack is very basic data structure which follow LIFO Order. “</p>\n<p>First we will divide the solution in parts:</p>\n","site":{"data":{}},"excerpt":"","more":"<p>#Stack </p>\n<hr>\n\n<p>Welcome back in this post we are going to implement stack data structure using rust</p>\n<p> “ Stack is very basic data structure which follow LIFO Order. “</p>\n<p>First we will divide the solution in parts:</p>\n"},{"title":"palindrome","date":"2018-04-28T13:09:49.000Z","_content":"\n## Pallindrome\n\nYou are given a string S.You need to check whether it's a palindrome or not. Print \"YES\" (without quotes) if S is a palindrome and \"NO\" (without quotes) if S is not a palindrome.\n\nTo know what a palindrome is you can check http://bit.ly/HashesPallindrome\n\nINPUT First line will contain an integer T that is the number of test cases. The following T lines will contain: -A string S consisting of only lowercase letters.\n\nOUTPUT Output YES or NO in new line for each test case.\n\n{% iframe https://www.hackerearth.com/submission/key/b17e955df05b4775807d95bd2def8928/?theme=dark %}\n\n```use std::io;\n    \n   fn main() {\n      /* echo();\n       let a = readInt();\n       println!(\" out put : {} \", a);*/\n    \n       let T = readInt();\n    \n       for _ in 0..T {\n          pallindrome();\n       }\n    \n      /* for arg in std::env::args(){\n           print!(\"{}\", arg);\n       }*/\n   }\n    \n    \n   //second problem\n   pub fn pallindrome(){\n       let mut strg = String::new();\n       let mut flag: bool = true;\n       io::stdin().read_line(&mut strg).expect(\"Error while reading string\");\n       let mut rev_str  = String::new();\n       let mut rev: String = strg.chars().rev().collect();\n       let rev = rev.trim();\n       let strg = strg.trim();\n       if strg == rev {\n           println!(\"YES\");\n       }else {\n           println!(\"NO\");\n       }\n   }\n    \n   pub fn readInt() -> i32{\n       let mut ip_txt = String::new();\n       io::stdin().read_line(&mut ip_txt).expect(\"error while reading\");\n       let trimed = ip_txt.trim();\n    \n       match trimed.parse::<i32>() {\n           Ok(value) => value,\n           Err(_) => 0000,\n       }\n   }\n   ```","source":"_posts/palindrome.md","raw":"---\ntitle: palindrome\ndate: 2018-04-28 13:09:49\ntags:\n---\n\n## Pallindrome\n\nYou are given a string S.You need to check whether it's a palindrome or not. Print \"YES\" (without quotes) if S is a palindrome and \"NO\" (without quotes) if S is not a palindrome.\n\nTo know what a palindrome is you can check http://bit.ly/HashesPallindrome\n\nINPUT First line will contain an integer T that is the number of test cases. The following T lines will contain: -A string S consisting of only lowercase letters.\n\nOUTPUT Output YES or NO in new line for each test case.\n\n{% iframe https://www.hackerearth.com/submission/key/b17e955df05b4775807d95bd2def8928/?theme=dark %}\n\n```use std::io;\n    \n   fn main() {\n      /* echo();\n       let a = readInt();\n       println!(\" out put : {} \", a);*/\n    \n       let T = readInt();\n    \n       for _ in 0..T {\n          pallindrome();\n       }\n    \n      /* for arg in std::env::args(){\n           print!(\"{}\", arg);\n       }*/\n   }\n    \n    \n   //second problem\n   pub fn pallindrome(){\n       let mut strg = String::new();\n       let mut flag: bool = true;\n       io::stdin().read_line(&mut strg).expect(\"Error while reading string\");\n       let mut rev_str  = String::new();\n       let mut rev: String = strg.chars().rev().collect();\n       let rev = rev.trim();\n       let strg = strg.trim();\n       if strg == rev {\n           println!(\"YES\");\n       }else {\n           println!(\"NO\");\n       }\n   }\n    \n   pub fn readInt() -> i32{\n       let mut ip_txt = String::new();\n       io::stdin().read_line(&mut ip_txt).expect(\"error while reading\");\n       let trimed = ip_txt.trim();\n    \n       match trimed.parse::<i32>() {\n           Ok(value) => value,\n           Err(_) => 0000,\n       }\n   }\n   ```","slug":"palindrome","published":1,"updated":"2018-04-28T07:51:00.243Z","_id":"cjgj2sojy000iv08l24o6ovqr","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Pallindrome\"><a href=\"#Pallindrome\" class=\"headerlink\" title=\"Pallindrome\"></a>Pallindrome</h2><p>You are given a string S.You need to check whether it’s a palindrome or not. Print “YES” (without quotes) if S is a palindrome and “NO” (without quotes) if S is not a palindrome.</p>\n<p>To know what a palindrome is you can check <a href=\"http://bit.ly/HashesPallindrome\" target=\"_blank\" rel=\"noopener\">http://bit.ly/HashesPallindrome</a></p>\n<p>INPUT First line will contain an integer T that is the number of test cases. The following T lines will contain: -A string S consisting of only lowercase letters.</p>\n<p>OUTPUT Output YES or NO in new line for each test case.</p>\n<iframe src=\"https://www.hackerearth.com/submission/key/b17e955df05b4775807d95bd2def8928/?theme=dark\" width=\"100%\" height=\"300\" frameborder=\"0\" allowfullscreen></iframe>\n<figure class=\"highlight plain\"><figcaption><span>std::io;</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">fn main() &#123;</span><br><span class=\"line\">   /* echo();</span><br><span class=\"line\">    let a = readInt();</span><br><span class=\"line\">    println!(&quot; out put : &#123;&#125; &quot;, a);*/</span><br><span class=\"line\"> </span><br><span class=\"line\">    let T = readInt();</span><br><span class=\"line\"> </span><br><span class=\"line\">    for _ in 0..T &#123;</span><br><span class=\"line\">       pallindrome();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   /* for arg in std::env::args()&#123;</span><br><span class=\"line\">        print!(&quot;&#123;&#125;&quot;, arg);</span><br><span class=\"line\">    &#125;*/</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">//second problem</span><br><span class=\"line\">pub fn pallindrome()&#123;</span><br><span class=\"line\">    let mut strg = String::new();</span><br><span class=\"line\">    let mut flag: bool = true;</span><br><span class=\"line\">    io::stdin().read_line(&amp;mut strg).expect(&quot;Error while reading string&quot;);</span><br><span class=\"line\">    let mut rev_str  = String::new();</span><br><span class=\"line\">    let mut rev: String = strg.chars().rev().collect();</span><br><span class=\"line\">    let rev = rev.trim();</span><br><span class=\"line\">    let strg = strg.trim();</span><br><span class=\"line\">    if strg == rev &#123;</span><br><span class=\"line\">        println!(&quot;YES&quot;);</span><br><span class=\"line\">    &#125;else &#123;</span><br><span class=\"line\">        println!(&quot;NO&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">pub fn readInt() -&gt; i32&#123;</span><br><span class=\"line\">    let mut ip_txt = String::new();</span><br><span class=\"line\">    io::stdin().read_line(&amp;mut ip_txt).expect(&quot;error while reading&quot;);</span><br><span class=\"line\">    let trimed = ip_txt.trim();</span><br><span class=\"line\"> </span><br><span class=\"line\">    match trimed.parse::&lt;i32&gt;() &#123;</span><br><span class=\"line\">        Ok(value) =&gt; value,</span><br><span class=\"line\">        Err(_) =&gt; 0000,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Pallindrome\"><a href=\"#Pallindrome\" class=\"headerlink\" title=\"Pallindrome\"></a>Pallindrome</h2><p>You are given a string S.You need to check whether it’s a palindrome or not. Print “YES” (without quotes) if S is a palindrome and “NO” (without quotes) if S is not a palindrome.</p>\n<p>To know what a palindrome is you can check <a href=\"http://bit.ly/HashesPallindrome\" target=\"_blank\" rel=\"noopener\">http://bit.ly/HashesPallindrome</a></p>\n<p>INPUT First line will contain an integer T that is the number of test cases. The following T lines will contain: -A string S consisting of only lowercase letters.</p>\n<p>OUTPUT Output YES or NO in new line for each test case.</p>\n<iframe src=\"https://www.hackerearth.com/submission/key/b17e955df05b4775807d95bd2def8928/?theme=dark\" width=\"100%\" height=\"300\" frameborder=\"0\" allowfullscreen></iframe>\n<figure class=\"highlight plain\"><figcaption><span>std::io;</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\">fn main() &#123;</span><br><span class=\"line\">   /* echo();</span><br><span class=\"line\">    let a = readInt();</span><br><span class=\"line\">    println!(&quot; out put : &#123;&#125; &quot;, a);*/</span><br><span class=\"line\"> </span><br><span class=\"line\">    let T = readInt();</span><br><span class=\"line\"> </span><br><span class=\"line\">    for _ in 0..T &#123;</span><br><span class=\"line\">       pallindrome();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   /* for arg in std::env::args()&#123;</span><br><span class=\"line\">        print!(&quot;&#123;&#125;&quot;, arg);</span><br><span class=\"line\">    &#125;*/</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">//second problem</span><br><span class=\"line\">pub fn pallindrome()&#123;</span><br><span class=\"line\">    let mut strg = String::new();</span><br><span class=\"line\">    let mut flag: bool = true;</span><br><span class=\"line\">    io::stdin().read_line(&amp;mut strg).expect(&quot;Error while reading string&quot;);</span><br><span class=\"line\">    let mut rev_str  = String::new();</span><br><span class=\"line\">    let mut rev: String = strg.chars().rev().collect();</span><br><span class=\"line\">    let rev = rev.trim();</span><br><span class=\"line\">    let strg = strg.trim();</span><br><span class=\"line\">    if strg == rev &#123;</span><br><span class=\"line\">        println!(&quot;YES&quot;);</span><br><span class=\"line\">    &#125;else &#123;</span><br><span class=\"line\">        println!(&quot;NO&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">pub fn readInt() -&gt; i32&#123;</span><br><span class=\"line\">    let mut ip_txt = String::new();</span><br><span class=\"line\">    io::stdin().read_line(&amp;mut ip_txt).expect(&quot;error while reading&quot;);</span><br><span class=\"line\">    let trimed = ip_txt.trim();</span><br><span class=\"line\"> </span><br><span class=\"line\">    match trimed.parse::&lt;i32&gt;() &#123;</span><br><span class=\"line\">        Ok(value) =&gt; value,</span><br><span class=\"line\">        Err(_) =&gt; 0000,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjgj2rbun0000v08lzn0x4n06","tag_id":"cjgj2rbuz0003v08lmobx1qes","_id":"cjgj2rbva0008v08lsovkgdz8"},{"post_id":"cjgj2rbuv0002v08l2oodukbh","tag_id":"cjgj2rbv90007v08lo4ow69pl","_id":"cjgj2rbve000dv08lgapns9ym"},{"post_id":"cjgj2rbuv0002v08l2oodukbh","tag_id":"cjgj2rbvb0009v08l1xxitvg0","_id":"cjgj2rbve000ev08lqz24qos3"},{"post_id":"cjgj2rbuv0002v08l2oodukbh","tag_id":"cjgj2rbvc000av08l2nd5dtzz","_id":"cjgj2rbvf000fv08lv86qoqjo"},{"post_id":"cjgj2rbuv0002v08l2oodukbh","tag_id":"cjgj2rbvc000bv08lxbskgmge","_id":"cjgj2rbvf000gv08lejx2h5ts"},{"post_id":"cjgj2rbv60005v08lb08hinv9","tag_id":"cjgj2rbv90007v08lo4ow69pl","_id":"cjgj2rbvg000hv08ld1riq64y"}],"Tag":[{"name":"rust","_id":"cjgj2rbuz0003v08lmobx1qes"},{"name":"Rust","_id":"cjgj2rbv90007v08lo4ow69pl"},{"name":"Algorithms","_id":"cjgj2rbvb0009v08l1xxitvg0"},{"name":"HackerEarth","_id":"cjgj2rbvc000av08l2nd5dtzz"},{"name":"Problems","_id":"cjgj2rbvc000bv08lxbskgmge"}]}}